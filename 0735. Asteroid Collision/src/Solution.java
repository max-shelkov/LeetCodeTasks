import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public class Solution {
    //done
    public static void main(String[] args) {
//        int[] input = {-381,795,-358,123,-473,478,52,134,85,-485,237,-995,-282,141,-861,-576,-757,-96,618,-42,-882,469,-576,47,92,-669,-496,-226,633,378,572,-261,-939,857,-250,-315,-227,250,965,-793,-660,-605,921,-709,489,-943,-195,790,580,689,342,528,159,805,-206,192,-8,881,317,283,90,198,-176,635,-1,-809,337,158,-704,599,103,344,441,-551,-423,-76,49,370,-716,-898,661,574,181,620,158,538,744,-55,12,736,-780,-442,927,-233,713,-693,-456,334,-392,758,-393,441,427,26,-53,560,328,-921,305,-892,909,-828,291,491,-411,-715,835,-126,430,-848,-12,427,944,-462,-604,122,77,-622,889,983,925,992,-295,-312,627,969,389,-804,719,-943,-686,700,841,183,-371,749,-328,-480,-49,296,360,-146,-701,-649,-732,-823,-288,349,240,-262,756,-882,208,301,74,-901,745,685,-44,-151,-125,858,47,-669,693,526,-586,223,297,-748,708,-172,380,574,288,569,568,-83,-460,603,-714};
//        int[] input = {10,2,-5};
        int[] input = {-319,522,-588,814,372,-294,118,333,458,-226,457,114,-554,589,-221,-397,-996,-520,448,-471,-916,-740,953,-814,152,-191,549,-448,-328,-40,-51,109,-471,2,320,381,150,-784,526,-64,961,413,-10,-783,-84,605,164,5,-190,-480,-531,-259,479,379,-951,548,550,-189,56,974,886,133,-74,817,535,-824,18,506,-85,882,-454,528,432,-272,-904,111,-248,83,-464,426,-276,238,-534,-8,-451,-589,948,-563,-131,270,-401,-28,429,860,-777,834,182,632,-74,167,-855,238,281,465,-778,327,387,541,-642,-519,-818,-757,-176,-638,914,-520,-606,413,157,-305,-728,-359,-871,788,-794,181,65,-424,-1000,748,145,421,-170,-958,995,864,-150,-95,-121,74,-778,976,215,214,-279,-85,-767,529,-1,501,943,109,750,405,968,-988,41,805,-373,-435,-71,-167,-281,-809,-130,980,-768,777,-904,-300,425,860,-586,210,63,-382,-858,-588,-673,372,-182,390,-17,993,322,-1000,754,-854,687,516,720,63,65,-877,-625,702,-657,-263,10,609,-230,-930,77,-631,-336,767,778,-195,850,-397,909,925,320,325,-951,-686,849,517,559,-583,-517,969,-244,-14,565,553,842,310,-913,976,-388,159,-619,218,-663,680,-464,165,83,-567,486,331,823,296,944,362,-683,-157,567,-319,-77,-924,183,-999,-258,844,835,-192,-462,631,500,616,591,34,775,-870,457,595,-111,599,735,542,-361,861,-932,258,469,-593,-426,223,364,-311,-702,427,-593,-79,646,-205,-437,-184,-771,78,-749,-104,-626,-258,-384,608,-476,613,292,854,-125,505,-143,-749,75,-693,125,580,-591,-41,744,-216,-250,-875,-246,-335,420,78,-139,583,-210,-125,-354,-600,-753,303,-487,624,918,-485,906,131,-49,30,636,-110,-161,55,-556,962,-490,-926,330,-834,308,962,279,571,56,687,-508,629,676,807,-716,-554,879,139,604,-473,840,-955,-966,-742,221,575,347,-834,689,-762,885,452,-672,-622,-753,82,568,885,634,-199,-590,31,-623,-28,933,490,876,94,8,892,114,-91,773,-643,-115,342,-580,805,957,-687,-831,354,-11,664,-421,506,706,-73,950,-867,631,973,-264,275,-135,-619,-820,-380,-94,618,-23,-161,-327,465,-902,399,-998,-1000,-738,866,-721,-371,253,-53,98,413,521,821,-910,-432,-377,796,-523,666,213,496,785,941,-702,-27,-322,-408,-358,-382,-455,-148,-274,-695,-552,380,-855,948,128,-672,-752,937,76,-978,-926,-222,-545,950,-640,-536,-496,757,615,169,-991,-806,434,867,25,30,-894,215,-848,946,151,-803,-233,894,945,26,-625,147,-549,-198,228,625,-863,524,-191,-336,-827,411,-507,-115,-723,-99,-546,-834,-350,586,795,603,-539,2,-451,52,-649,-827,128,-288,-900,251,379,-130,333,434,439,-533,-310,907,-154,-273,683,-659,-117,922,-133,616,-375,-62,-641,643,312,945,-185,-217,-486,-7,893,977,580,-48,419,420,677,-693,160,621,283,846,-159,-932,-955,-223,-352,311,-690,23,-462,-94,-812,-9,305,-870,-881,993,484,-801,-436,10,222,454,866,687,-319,939,571,-734,431,-289,405,-109,922,887,-714,765,361,-454,-832,737,734,629,-460,339,171,-852,307,-490,549,719,107,-852,-168,968,139,-952,-151,-176,-892,59,-319,665,574,736,654,348,156,-658,800,-628,318,-689,-365,793,619,235,-897,279,-307,-897,-978,-190,-354,724,-142,417,-249,977,551,301,-60,854,165,-598,192,794,814,-29,-742,181,-491,302,-816,-437,-899,521,-814,-988,-622,-64,-685,-502,-625,437,-822,-381,837,-145,492,-166,198,-91,-911,224,766,566,-785,-572,-83,-575,-308,-500,914,866,437,-984,968,-467,-569,96,65,579,-934,587,926,478,-641,-762,-903,71,-485,-135,-762,635,-645,-501,-714,-686,-857,457,606,395,449,100,-936,-40,-255,-169,493,957,-961,-841,-195,331,407,785,46,-935,-359,691,-914,-236,501,360,970,867,599,-841,-635,-706,217,196,877,989,-938,587,-523,-819,-134,-523,-968,214,-922,-35,-262,-599,352,892,947,356,-587,244,683,-802,436,28,-215,-573,-280,-380,-147,-785,31,-52,122,-313,-202,-315,970,162,363,-993,-336,764,-753,102,410,-364,-586,889,7,-21,95,642,-644,-995,-81,861,-412,-252,680,-829,706,577,32,-320,-995,825,-63,-421,928,-160,628,-563,-289,-111,237,-565,102,-904,152,259,-901,63,810,-415,743,860,129,-559,55,545,-187,-776,-504,-977,-717,-420,-274,134,-705,-939,615,-503,601,960,741,269,-667,-242,584,-9,-398,295,-600,674,772,-553,-898,-541,-355,28,433,-340,205,827,374,781,-443,855,-365,556,984,-839,226,139,-255,905,947,-709,-426,-55,641,-532,530,519,105,-294,331,621,-281,811,-5,861,-594,335,-188,603,972,-820,555,75,-986,370,32,682,241,504,88,-585,864,-24,-291,-167,-303,-3,-164,-774,-6,-892,502,705,-786,-888,153,-949,735,-123,871,54,647,536,300,-773,-559,4,-365,335,-52,-446,487,680,-562,-975,-849,856,689,-397,208,-232,298,234,323,587,709,803,250,904,-32,-101,-139,-803,172,801,519,-597,309,-11,981,889,-76,987,-61,614,-549,29,-911,663,-713,713,-75,-542,483,913,-332,420,-874,442,582,-130,-245,-711,-424,57,-712,-464,851,291,88,222,438,896,730,922,98,370,245,96,808,144,862,-471,-265,871,16,-413,-162,-287,-246,753,-478,434,-52,429,878,-705,-709,991,-699,-614,745,650,550,-87,-233,854,-723,691,508,713,17,-596,172,92,-118,295,-510,-718,-904,418,185,-499,-992,99,-288,-639,39,141,115,789,576,71,688,-309,662,-838,314,-826,961,647,-711,298,-516,-458,463,-484,755,398,-319,-822,-881,553,405,-901,344,800,702,966,-790,747,904,-460,690,209,-794,-501,605,801,-564,297,447,290,543,-927,640,-261,-379,-876,-215,-439,860,-572,322,-602,-417,-887,977,-378,258,403,780,-355,245,-146,-372,866,-453,709,-151,-670,-551,-453,32,874,873,820,94,-266,326,-749,393,-141,-366,-169,465,71,-290,-892,301,992,941,470,-721,-232,620,184,72,-753,253,186,993,616,249,646,908,593,284,147,128,705,-965,293,-131,226,-76,144,-628,-475,397,-801,-697,-721,9,877,946,-395,685,-268,975,353,-836,-237,3,399,-86,-868,-238,253,-894,-300,-207,59,-898,449,-836,142,-241,-813,-398,648,465,942,-179,26,-339,-296,-870,687,338,-135,662,-357,-565,762,199,-440,17,-592,-299,-350,-623,-585,346,-308,-23,633,730,-547,-617,-47,560,-945,-638,848,-926,784,-971,-437,-332,-726,-829,937,-751,900,391,-665,13,959,626,-287,693,-377,-615,-83,-577,-912,-71,-561,552,-505,77,-382,-106,99,140,995,-480,840,483,-684,-464,599,-823,-772,-639,-356,-722,-934,-42,258,349,99,655,198,908,630,-945,-362,44,413,-816,147,-850,831,-488,-459,80,112,-486,-772,663,-434,-902,-915,-397,-505,815,-11,-494,-7,920,583,-91,-755,817,197,461,581,589,124,254,-623,-38,199,-924,-231,-226,576,-77,993,940,-610,-228,-78,-523,217,903,-437,-775,-76,43,792,87,529,-852,307,741,206,-648,-955,642,78,-747,481,94,-525,-322,-864,323,329,47,-124,-404,215,-276,-200,192,540,-505,-806,702,456,61,415,718,937,312,-698,780,-165,493,-659,-832,424,-325,824,-627,-993,-163,359,-145,783,-52,-26,-927,81,-220,335,804,241,-173,-861,-459,491,196,-52,-479,-739,-945,923,-611,-343,-298,-235,-809,656,-338,-15,-818,76,-674,908,181,101,377,131,-630,-574,-814,-689,-22,-674,-781,688,-592,-777,-133,571,-475,838,-355,859,764,458,-86,-233,-968,582,-526,276,503,167,-466,-578,28,989,-553,-832,-279,892,-773,-683,727,-905,-794,765,-402,-753,-892,799,-449,-26,-14,-117,764,926,769,96,-870,485,912,-1000,-133,59,-132,-418,-671,-558,30,-76,471,-200,-680,-830,-25,-103,-380,351,809,56,-685,178,112,692,-821,676,-183,-651,410,596,23,-900,118,391,836,923,791,960,-617,441,-891,984,898,711,-584,966,-446,-143,488,567,-373,105,-926,817,400,390,405,255,199,450,297,628,413,-282,-846,957,-946,787,341,-312,568,-673,929,-343,325,297,66,-512,271,-918,923,521,297,551,66,-91,576,-913,396,-44,778,841,38,-823,559,899,256,-785,824,802,-15,-750,-801,-961,-409,641,355,228,-239,-136,-66,-704,703,-318,413,-554,34,-643,-894,660,-143,648,470,438,-651,-574,909,-804,-531,471,-729,-364,184,991,321,-636,-74,-144,-731,500,747,-822,-347,798,804,375,789,986,748,-528,683,447,-630,-952,-360,195,-340,891,715,-148,-684,424,-613,456,949,263,-807,-362,861,-628,-504,759,36,76,-775,-220,654,-388,-189,-537,6,192,733,-613,81,116,578,236,-673,202,687,-302,508,85,105,264,-197,-702,553,-226,-411,127,98,630,-827,-84,-157,-136,-74,-295,-751,34,300,-144,-501,-567,920,-222,336,603,83,-785,222,380,-257,304,586,543,-831,849,-602,-959,-918,-162,-942,367,219,480,-803,-901,-232,-82,226,-685,-334,-581,524,689,912,310,430,-192,852,560,697,550,-422,636,-448,-941,840,-870,847,976,-654,-363,-192,-788,6,23,-8,-563,494,-283,397,117,564,-711,-592,673,-182,-413,752,-392,887,80,-508,475,319,-182,49,-701,-83,89,-678,895,-560,-531,15,-136,-406,892,587,-974,-555,923,-428,-378,477,-287,-892,-70,932,-490,-295,-479,9,438,434,871,-245,57,-94,238,-528,99,384,-997,-404,970,323,-196,-645,-896,372,-11,606,806,997,-263,421,-893,581,-336,-101,861,489,388,-438,845,-896,-756,-140,-627,949,-899,253,251,-244,452,348,644,-370,578,-750,357,-162,108,140,-143,-101,-415,-298,-790,-558,-905,-158,190,-727,461,-233,187,306,156,861,697,963,635,266,-842,107,864,902,317,947,-782,698,-758,-655,-780,757,-365,-658,-777,163,695,-544,-949,-480,-460,539,419,-4,-332,-577,-872,107,363,134,340,852,261,-417,-36,341,597,-87,84,-835,-137,-705,-702,-195,249,-15,-884,-15,244,-920,-54,813,166,-636,-520,454,689,-269,-98,-801,-307,264,973,-709,-743,297,621,45,-210,-680,356,-992,-215,-441,666,-559,-172,-189,-446,48,-915,-890,-507,155,762,-808,866,-740,648,-814,441,643,777,471,-120,-321,161,8,-845,-484,522,979,846,-677,674,680,528,-942,670,380,-720,863,191,-385,-335,-253,611,-969,975,-5,165,-822,-509,944,-3,923,569,-573,-776,-735,-892,233,160,746,-406,-431,980,140,-273,-917,679,-906,703,216,-178,637,905,354,-203,262,684,875,294,295,-888,-995,636,777,-265,-377,-449,986,-789,667,547,-579,224,310,-294,-974,-544,-837,-267,-838,-687,-360,504,861,846,-324,-686,-843,701,-83,132,-64,-471,904,406,771,-353,-576,608,285,-645,974,222,169,-49,-300,553,226,321,-610,-910,192,-900,581,676,-670,-503,385,-865,639,953,-199,-385,947,-263,615,-814,-517,81,-699,-896,-46,590,639,895,-912,-428,552,69,249,-287,562,151,823,-987,671,-411,762,316,195,-275,714,258,4,417,29,-508,-313,359,-481,250,29,986,127,229,-664,-575,-420,567,-465,-437,408,-370,522,545,17,910,726,-656,951,-756,455,642,153,-235,304,-983,751,-416,-350,492,-315,-783,980,-196,-783,712,-855,380,-538,169,50,-523,42,483,-766,645,413,-902,617,-355,-529,-183,-292,611,791,495,-326,-380,-561,976,521,-943,757,719,-561,-191,-160,346,312,-580,749,709,9,-886,-445,120,-604,-842,23,189,228,-468,17,372,425,532,680,21,-106,-56,-911,-410,291,-506,282,-747,126,-958,-593,497,-302,-829,-724,-687,-746,734,428,-916,-724,-676,371,546,-25,-411,747,818,387,463,165,743,913,-933,-54,-75,434,-939,-986,464,-112,-181,346,-137,-98,-901,207,542,-145,-318,-699,-221,-763,855,-803,525,-673,-734,286,668,78,-510,340,-390,479,-577,247,-125,552,-750,-79,951,-358,-227,-956,598,-352,-741,45,938,-483,780,46,-700,981,-47,-202,-416,-826,-499,752,116,852,869,319,-784,-786,149,212,-787,427,-277,511,-539,473,683,-315,7,627,580,83,-594,-506,249,-904,276,502,-903,-283,-175,-243,484,-139,36,228,14,-684,-825,-714,806,-894,945,518,470,994,475,-365,778,232,-212,883,4,-520,838,8,751,-909,10,-803,542,-865,-510,-958,-918,-313,518,582,499,640,817,-272,779,770,-313,-22,-997,-631,-279,-622,-494,784,-744,-147,531,301,-43,-157,112,52,538,-828,-192,-710,652,277,990,522,-865,742,958,-882,224,566,813,-351,-301,683,-758,865,-557,-794,-867,341,753,-6,908,-459,520,-74,783,-52,248,-315,-541,-917,-878,236,368,564,774,-101,-803,242,691,371,-869,-100,-544,796,779,-377,-518,-650,929,-213,-147,-931,-64,-752,-732,-714,75,-160,224,779,-253,-584,-504,-267,-555,573,687,833,475,-451,-22,-133,137,672,-903,-241,-560,667,-77,139,-347,616,-301,-484,-785,-484,-593,252,-867,490,925,-877,113,714,656,-466,-224,335,405,-774,-207,-183,-79,-576,202,-406,748,568,-972,-958,342,-156,-177,-123,675,811,295,206,260,474,-235,634,582,-621,-708,-396,-104,-791,839,831,697,-907,608,-759,-331,-142,912,235,-678,798,844,-567,-439,-449,-63,-824,-493,-593,-722,-991,799,242,381,897,337,-77,490,-254,478,982,836,-960,-620,574,-764,-471,46,505,-654,-279,196,811,784,-681,500,261,-441,-968,283,776,-717,359,528,605,-398,-585,-315,736,452,754,-261,777,215,-368,7,-109,386,-345,4,-391,118,-156,-506,-761,745,418,-420,919,-36,-725,-834,-992,-879,71,608,-64,223,579,950,-171,-539,6,958,712,-665,-216,-620,-572,830,597,611,-115,25,-126,687,4,428,829,783,272,97,-453,-956,656,576,-739,153,-526,430,-589,880,-832,842,-522,52,-713,686,-305,-535,238,-190,-453,-554,130,-459,-169,-446,45,890,-943,-4,-1000,227,230,-688,-603,-443,-763,-103,425,518,858,-426,-753,-734,-335,-71,-509,534,-209,-406,-202,-447,889,-348,957,-68,634,724,139,106,480,-653,-635,-281,389,-870,745,-608,-181,147,-755,-387,-301,-399,-609,-487,746,113,369,-316,-187,231,-271,203,-982,65,406,525,-116,-201,793,666,-214,-83,-58,-353,-175,-509,-474,-320,-746,19,-17,311,809,-682,-904,260,510,-260,-384,143,740,-650,3,913,388,861,574,147,229,677,315,-872,-39,834,-363,-610,-559,104,425,-107,60,-137,-164,-188,455,747,-918,794,-234,97,-58,530,-934,-227,222,-20,409,-351,412,-188,-354,-685,-550,967,-771,380,82,-262,641,-374,-446,495,-157,936,-344,550,-964,764,361,356,653,-74,-1000,523,-993,-653,346,760,161,184,-857,-943,937,-210,88,-810,-757,663,971,-208,-15,-846,-265,-353,-494,-930,608,-752,-724,266,-658,138,-941,194,167,8,-397,-388,-882,200,-907,-648,289,352,204,-855,353,524,469,847,-33,671,-402,749,-88,873,689,-610,435,-906,806,-273,195,890,736,-280,633,758,-280,407,-450,-436,717,924,219,-2,-942,326,94,-759,-180,548,-960,-72,646,19,-878,-832,-668,-441,51,337,499,-21,107,-805,761,-587,494,-574,-998,-597,-148,175,396,628,102,976,484,-616,-145,372,-444,761,440,183,458,-623,-608,-833,-532,242,202,-729,99,187,107,700,424,627,145,621,283,772,956,657,-84,146,-924,976,-803,-554,357,-123,122,195,345,440,-524,210,-943,-816,-944,-780,-240,923,-70,-638,649,-531,481,207,-698,601,439,-992,-135,503,-102,-662,25,882,-898,-783,-865,-107,-876,957,573,-614,-755,-142,796,788,496,-887,-407,973,700,101,-666,-968,-571,-130,-865,381,-448,36,-767,-601,410,813,-999,-175,607,-293,945,967,52,500,-786,-26,-650,688,-952,-463,211,-159,218,51,860,-525,-763,-756,-71,-32,-58,-53,-220,-823,946,-756,170,672,710,-753,268,920,154,83,176,-345,-8,-615,-588,999,332,34,-737,660,-746,286,-871,434,903,-444,-374,-384,-748,-868,-117,797,279,-974,-513,783,-407,-13,960,459,913,-467,180,498,-190,-416,854,-533,233,561,378,166,-757,-168,93,-930,606,-618,885,887,-635,194,643,201,-408,401,-723,-336,620,-418,-235,97,481,123,-159,-258,216,19,-679,-423,-863,-124,563,-797,394,612,-644,-549,-568,-780,-301,-266,-865,-871,-935,-620,-827,-373,58,602,209,-553,699,839,320,122,155,-335,610,-330,-51,-734,-693,776,333,-230,72,-50,-355,-557,503,-732,-855,-708,92,-29,-789,-74,-53,-922,711,265,144,-261,-415,158,315,-249,983,-563,-756,-25,627,-823,637,179,-969,923,35,249,37,-848,-85,-159,817,-710,116,0,90,336,-319,-393,-63,-678,-998,237,-381,866,-565,-982,232,785,-552,229,431,-551,-246,-683,-231,-424,-806,888,288,595,-73,692,14,693,-287,532,-597,277,-132,162,-833,-148,719,-510,585,399,-593,-748,-961,-196};
        Solution solution = new Solution();
        long start = System.currentTimeMillis();
        int[] res = solution.asteroidCollision(input);
        long finish = System.currentTimeMillis();
        System.out.println("res = " + Arrays.toString(res));
        System.out.println("time = " + (finish - start));
    }

    public int[] asteroidCollision(int[] asteroids) {
        if (asteroids == null || asteroids.length == 0) return new int[0];
        List<Integer> a = new ArrayList<>();
        for (int asteroid : asteroids) a.add(asteroid);
        int size = a.size();
        while(true){
            for (int i = 1; i < a.size(); i++) {
                if (a.get(i) < 0 && a.get(i-1) > 0) {
                    if (a.get(i)+a.get(i-1) == 0) {
                        a.set(i-1, 0);
                        a.set(i, 0);
                    } else {
                        a.set(i , (Math.abs(a.get(i - 1))> Math.abs(a.get(i))) ? a.get(i-1): a.get(i));
                        a.set(i - 1, 0);
                    }
                }
            }
            a.removeAll(Collections.singleton(0));
            if (a.size() < size) {
                size = a.size();
            } else {
                break;
            }
        }
        int[] res = new int[a.size()];
        for (int i = 0; i < a.size(); i++) res[i] = a.get(i);
        return res;

    }


}
